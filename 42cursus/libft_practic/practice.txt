int ft_isalpha(int c)
itn ft_isdigit(int c)  
int ft_isalnum(int c) 
int ft_isascii(int c) 
int ft_isprint(int c) 
int ft_isspace(int c)

int ft_toupper(int c)
int ft_tolower(int c)

size_t ft_strlen(const char *s)
size_t ft_strlcpy(char *dest, const char *src, size_t size)
size_t ft_strlcat(char *dest, const char *src, size_t size) 
char* ft_strchr(const char *s, int c)
char* ft_strrchr(const char *s, int c)
int ft_strncmp(const char *s1, const char *s2, size_t n)
char* ft_strnstr(const char *haystack, const char *needle, size_t len)

void* ft_memset(void *buf, int c, size_t size)
void* ft_bzero(void *buf, size_t size)
void* ft_memcpy(void *dest, const void *src, size_t size) 
void* ft_memmove(void *dest, const void *src, size_t size)
void* ft_memchr(const void *buf, int ch, size_t size) 
int ft_memcmp(const void *buf1, const void *buf2, size_t size)

isalpha alphabetかどうかの判定  
isdigit 数値かどうかの判定  
isalnum alphabetと数値かどうかの判定 
isascii asciiかどうかの判定 
isprint printableかどうかの判定 
isspace spaceを出力するasciiかどうかの判定

toupper 小文字を大文字に
tolower 大文字を小文字に

strlen 文字列の長さの判定   size_t (const char *s)
strlcpy srcをsize-1バイトdstにコピーし最後にnull文字   size_t (char *dest, const char *src, size_t size)
strlcat dstにsrcを追加しsize-1バイトにし最後にnull文字   size_t (char *dest, const char *src, size_t size) 
strchr cをsの先頭から検索   char* (const char *s, int c)
strrchr cをsの末尾から検索   char* (const char *s, int c)
strncmp s1とs2の比較   int (const char *s1, const char *s2, size_t n)
strnstr needleをhaystackの先頭から検索   char* (const char *haystack, const char *needle, size_t len)


memset cをnバイトunsigned charに変換し配置   void* (void *buf, int c, size_t n)
bzero 0をnバイト配置   void* (void *buf, size_t n)
memcpy srcをnバイトdstにコピー  void* (void *dest, const void *src, size_t n) 
memmove overlapに対応したmemcpy   void* (void *dest, const void *src, size_t n)
memchr cをbufの先頭から検索   void* (const void *buf, int ch, size_t n) 
memcmp buf1とbuf2を比較   int (const void *buf1, const void *buf2, size_t n)